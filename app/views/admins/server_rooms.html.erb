<%
# BigBlueButton open source conferencing system - http://www.bigbluebutton.org/.
# Copyright (c) 2018 BigBlueButton Inc. and by respective authors (see below).
# This program is free software; you can redistribute it and/or modify it under the
# terms of the GNU Lesser General Public License as published by the Free Software
# Foundation; either version 3.0 of the License, or (at your option) any later
# version.
#
# BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
# You should have received a copy of the GNU Lesser General Public License along
# with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.
# GT20200405 inserito Js per visualizzare stato delle rooms
%>


<div class="container pt-6">
  <%= render "shared/components/subtitle", subtitle: t("administrator.title"), search: false %>

  <div class="row">
    <div class="col-lg-3 mb-4">
      <%= render "admins/components/menu_buttons" %>
    </div>
    <div id="server_recordings" class="col-lg-9">
        <%= render "admins/components/setting_view", setting_id: "rooms", setting_title: t("administrator.rooms.title"), search: true %>
    </div>
  </div>
</div>

<%= render "shared/modals/delete_room_modal" %> 
<%= render "shared/modals/create_room_modal" %>
<% if shared_access_allowed %>
  <%= render "shared/modals/share_room_modal" %>
<% end %>

<script>

var ordine = [],
    ordinenuovo = [],
    coppia = [],
    i = 0,
    j = 0,
    tot = 0;

var qregnot = new RegExp('Not Running', 'i'),
    qregyes = new RegExp('>Running<', 'i');

var tabella = document.getElementById("rooms-table");

var corpo = tabella.getElementsByTagName("TBODY");

var righe = corpo[0].children;

var numrighe = righe.length;

/* CONTIAMO QUANTI NE ABBIAMO */
for (i = 0; i < righe.length; i++) {
   testo = righe[i].innerHTML;
   if(qregyes.test(testo)){
       tot = tot + 1;
   }
}

/* ASSEGNAMO ORDINE */
for (i = 0; i < righe.length; i++) {
   testo = righe[i].innerHTML;
   if(qregyes.test(testo)){
       ordine.push([i, j]);
       j = j + 1;
   } else {
       ordine.push([i, tot]);
       tot = tot + 1;
   }
}

/* RIORDINIAMO */
ordine.sort(function(a, b) {return a[1]-b[1]});
for (var i = 0; i < ordine.length; i++) {
    ordine[i].pop(1);
    ordinenuovo.push(ordine[i][0]);
}

/* CREAIAMO COL NUOVO ORDINE */
var frammento = document.createDocumentFragment();
ordinenuovo.forEach(function(idx) {
    frammento.appendChild(righe[idx].cloneNode(true));
});

/* SOSTITUIAMO */
corpo[0].innerHTML = null;
corpo[0].appendChild(frammento);

/* ANCHE L'OCCHIO VUOLE LA SUA PARTE */
var td = tabella.getElementsByClassName("text-left");

var i,
    voce,
    regnot = new RegExp('^Not Running$', 'i'),
    regyes = new RegExp('^Running$', 'i');

for (i = 0; i < td.length; i++) {
    testo = td[i].innerText;
    if(regyes.test(testo)){
        td[i].style.fontWeight="bold";
        td[i].style.color="limegreen";
    } else if(regnot.test(testo)){
        td[i].style.fontWeight="normal";
        td[i].style.color="#495057;";
    }
}



function refreshProgrammato(intervallo) {
    setTimeout("location.reload(true);",intervallo);
}
var intervallo = 10000,
supportoListenerPassivi = !1;

try {
     options = {get passive() {supportoListenerPassivi = !0;}};
     window.addEventListener("dummy", options, options);
     window.removeEventListener("dummy", options, options);
    }
catch(err) {
     supportoListenerPassivi = !1;
    };
window.addEventListener('load', refreshProgrammato, supportoListenerPassivi ? { passive: true } : false);


</script>
